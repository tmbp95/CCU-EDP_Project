ENV["LC_ALL"] = "pt_PT.UTF-8"
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # config.vm.box = "bento/ubuntu-16.04" 
  # config.vm.box_version = "201710.25.0"
  
  config.vm.box = "ubuntu/trusty64"
  
  #Set hostname
    config.vm.hostname = "db.tecnico.ulisboa.pt"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "172.31.32.253"
  # Previous link to EDP Broker Api reference was http://85.247.219.175:4567/explorer/
  config.vm.network "private_network", ip: "85.247.219.175"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
   config.vm.synced_folder ".", "/vagrant", disabled: true # type: "virtualbox"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
      vb.memory = "4096"
  #   # NR of CPU for VM
      vb.cpus = 1
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL

   sudo apt-get update
   sudo apt-get upgrade -y

   sudo locale-gen pt_PT.UTF-8
   sudo update-locale LC_ALL=pt_PT.UTF-8 LANG=pt_PT.UTF-8
   sudo sed -i -e 's/XKBLAYOUT="us"/XKBLAYOUT="pt"/g' /etc/default/keyboard

    echo "*************************************"
    echo "*********   DOCKER INSTALL   ********"
    echo "*************************************"

    sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo apt-key fingerprint 0EBFCD88

    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get update
    sudo apt-get install docker-ce -y
	
   echo "*************************************"
   echo "******   NODEJS INSTALL   *******"
   echo "*************************************"

	curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
	sudo apt-get install -y nodejs
	sudo apt-get install -y build-essential

  # sudo apt-get install nodejs npm -y # Version Apt-get Ubuntu (no needed)
  # sudo npm install -g grunt-cli yo
  echo "git clone http://github.com/tmbp95/ccu.git -b backend-v0.0.0" > /home/vagrant/ccugitclone.sh
  sudo chmod a+x /home/vagrant/ccugitclone.sh
  # cd main
  # npm install
  # grunt &

  #echo "*************************************"
  #echo "********   Apache2 INSTALL   ********"
  #echo "*************************************"

  #   sudo apt-get install -y apache2

  echo "*************************************"
  echo "******** Desktop Environment ********"
  echo "*************************************"

   sudo apt install lubuntu-core lxterminal lubuntu-software-center aptitude virtualbox-guest-dkms synaptic leafpad evince file-roller firefox git-cola -y

  echo "*************************************"
  echo "********   Atom.io INSTALL   ********"
  echo "*************************************"

     sudo add-apt-repository ppa:webupd8team/atom
     sudo apt update && sudo apt install atom -y

  echo "*************************************"
  echo "**************   FIM   **************"
  echo "*************************************"

  echo "Login: vagrant Password: vagrant"
  shutdown -r 1 "Virtual Machine will reboot in 1 min..."

   SHELL
end
